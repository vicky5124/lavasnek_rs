name: CI

on: [push, pull_request]

jobs:
  lint-and-fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          #args: -- --check

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features

      - name: Test with cargo
        uses: actions-rs/cargo@v1.0.1
        with:
          command: test
          args: --no-default-features
          toolchain: stable

  build-posix:
    runs-on: ${{ matrix.os }}
    needs: lint-and-fmt
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
        #python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          #curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

      - name: Add poetry to path
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Install package deps
        run: |
          poetry install
          poetry run pip install -r dev-requirements.txt --pre

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Python package
        run: |
          poetry run maturin develop --release
          poetry run maturin build --no-sdist --strip --release -o target/wheels/lavasnek_rs -i python${{ matrix.python-version }}

      - name: pytest
        run: poetry run pytest tests

      - name: fmt-black-examples
        run: poetry run black --check examples

      - name: mypy-pure-hikari
        if:  matrix.python-version == '3.9'
        run: poetry run mypy --strict examples/pure_hikari_basic_queue

      - name: mypy-hikari-lightbulb
        if:  matrix.python-version == '3.9'
        run: poetry run mypy --strict examples/hikari_lightbulb_basic_queue

      - name: mypy-hikari-tanjun
        if:  matrix.python-version == '3.9'
        run: poetry run mypy --strict examples/hikari_tanjun_basic_queue

      - name: flake8-examples
        if:  matrix.python-version == '3.9'
        run: poetry run flake8 examples

      - name: Upload Artifacts
        uses: actions/upload-artifact@master
        with:
          name: lavasnek-rs ${{ matrix.os }} for Python ${{ matrix.python-version }}
          path: target/wheels/lavasnek_rs

  build-windows:
    runs-on: windows-latest
    needs: lint-and-fmt
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.6-3.10
      #- name: Set up Python 3.6-3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          #python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip poetry
          #curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python

      - name: Add poetry to path
        run: echo "${HOME}/.poetry/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install package deps
        run: |
          poetry install
          poetry run pip install -r dev-requirements.txt --pre

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Python package
        run: |
          poetry run maturin develop --release
          poetry run maturin build --no-sdist --strip --release -o target/wheels/lavasnek_rs

      - name: pytest
        run: poetry run pytest tests

      - name: fmt-black-examples
        run: poetry run black --check examples

      - name: mypy-pure-hikari
        run: poetry run mypy --strict examples/pure_hikari_basic_queue

      - name: mypy-hikari-lightbulb
        run: poetry run mypy --strict examples/hikari_lightbulb_basic_queue

      - name: mypy-hikari-tanjun
        run: poetry run mypy --strict examples/hikari_tanjun_basic_queue

      - name: flake8-examples
        run: poetry run flake8 examples

      - name: Upload Artifacts
        uses: actions/upload-artifact@master
        with:
          name: lavasnek-rs windows-latest for Python 3.6 to 3.10
          #name: lavasnek-rs windows-latest for Python 3.6 to 3.9
          path: target/wheels/lavasnek_rs
