name: Release to to PyPi and GitHub

on:
  push:
    tags:
      - "*"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} - ${{ matrix.vers }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          #- vers: i686
          #  os: ubuntu-20.04
          - vers: aarch64
            os: ubuntu-20.04
          - vers: auto64
            os: ubuntu-20.04
          - vers: arm64
            os: macos-10.15
          - vers: auto64
            os: macos-10.15
          - vers: auto64
            os: windows-2019

    env:
      SCCACHE_VERSION: 0.2.13
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y"
      CIBW_BUILD_VERBOSITY: "1" # Make some more noise to not stall, and extra debugging.
      CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
      CIBW_SKIP: "cp27-* cp34-* cp35-* pp* *-win32"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"

      #- name: Install Visual C++ Build Tools
      #  if: runner.os == 'Windows'
      #  run: choco install microsoft-visual-cpp-build-tools -f -y

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: wheels Linux ${{ matrix.vers }}
        if: runner.os == 'Linux'
        uses: joerick/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.vers }}

      - name: wheels Macos ${{ matrix.vers }}
        if: runner.os == 'Macos'
        uses: joerick/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.vers }}

      - name: wheels Windows ${{ matrix.vers }}
        if: runner.os == 'Windows'
        uses: joerick/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS_WINDOWS: ${{ matrix.vers }}

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.8"

      - name: Build sdist
        run: |
          python -m pip install setuptools-rust setuptools wheel
          python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  release:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/wheels/lavasnek_rs*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
